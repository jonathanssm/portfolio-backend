spring:
  application:
    name: portfolio-backend

  # Remover depois que implementar o auth
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
    show-sql: ${SPRING_JPA_HIBERNATE_SHOW_SQL:false}
    properties:
      org.hibernate.envers.default_schema: portfolio_aud
      hibernate:
        format_sql: ${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:false}
        jdbc.batch_size: 20                     # Melhora performance em inserts em lote
        order_inserts: true                     # Otimiza inserts
        order_updates: true                     # Otimiza updates
        query.in_clause_parameter_padding: true # Evita cache explosion em IN clauses
        default_schema: portfolio

  liquibase:
    enabled: ${SPRING_LIQUIBASE_ENABLED:true}
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: portfolio_aud
    liquibase-schema: public
    drop-first: false
    parameters:
      logLevel: INFO

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: portfolio-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.jonathanssm.portfoliobackend.model.*

logging:
  level:
    com.jonathanssm.portfoliobackend: ${LOGGING_LEVEL_COM_JONATHANSSM_PORTFOLIOBACKEND:INFO}
    org.springframework: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK:WARN}
    org.hibernate: ${LOGGING_LEVEL_ORG_HIBERNATE:ERROR}
    org.apache.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log

management:
  endpoints.web.exposure.include: health,info,metrics
  endpoint.health.show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:when-authorized}
  endpoint.health.probes.enabled: true
