name: Deploy backend to VM (backend + docker)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3️⃣ Dar permissão ao Maven Wrapper
      - name: Give execute permission to Maven wrapper
        run: chmod +x ./mvnw

      # 4️⃣ Build do JAR
      - name: Build JAR
        run: ./mvnw -B clean package -DskipTests

      # 5️⃣ Listar JAR
      - name: List JAR
        run: ls -l target/

      # 6️⃣ Copiar JAR para a VM
      - name: Copy JAR to backend VM
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.BACKEND_VM_IP }}
          username: ${{ secrets.BACKEND_VM_USER }}
          key: ${{ secrets.BACKEND_VM_SSH_KEY }}
          port: 22
          source: "target/portfolio-backend-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/backend/portfolio-backend-0.0.1-SNAPSHOT.jar"

      # 7️⃣ Build e deploy na VM
      - name: Build and deploy backend on VM
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.BACKEND_VM_IP }}
          username: ${{ secrets.BACKEND_VM_USER }}
          key: ${{ secrets.BACKEND_VM_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd /home/ubuntu/backend

            # Instala Docker via script oficial
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh

            # Garante que o Docker está ativo
            sudo systemctl enable --now docker

            # Ativa BuildKit nativo do Docker
            export DOCKER_BUILDKIT=1

            # Build da imagem Docker passando o nome do JAR como build-arg
            sudo docker build -t portfolio-backend \
              --build-arg JAR_FILE=portfolio-backend-0.0.1-SNAPSHOT.jar .

            # Para e remove container antigo se existir
            sudo docker rm -f portfolio-backend || true

            # Exporta variáveis de ambiente para o Docker
            export SPRING_DATASOURCE_URL="${{ secrets.SPRING_DATASOURCE_URL }}"
            export SPRING_DATASOURCE_USERNAME="${{ secrets.SPRING_DATASOURCE_USERNAME }}"
            export SPRING_DATASOURCE_PASSWORD="${{ secrets.SPRING_DATASOURCE_PASSWORD }}"
            export SPRING_KAFKA_BOOTSTRAP_SERVERS="${{ secrets.SPRING_KAFKA_BOOTSTRAP_SERVERS }}"

            # Roda o container com variáveis de ambiente
            sudo docker run -d --name portfolio-backend \
              -p 8080:8080 \
              -e SPRING_DATASOURCE_URL="$SPRING_DATASOURCE_URL" \
              -e SPRING_DATASOURCE_USERNAME="$SPRING_DATASOURCE_USERNAME" \
              -e SPRING_DATASOURCE_PASSWORD="$SPRING_DATASOURCE_PASSWORD" \
              -e SPRING_KAFKA_BOOTSTRAP_SERVERS="$SPRING_KAFKA_BOOTSTRAP_SERVERS" \
              portfolio-backend:latest
