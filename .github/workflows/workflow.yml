name: Deploy backend to VM (backend + docker)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Give execute permission to Maven wrapper
        run: chmod +x ./mvnw

      # 3️⃣ Build JAR
      - name: Build JAR
        run: ./mvnw -B clean package -DskipTests

      - name: List JAR
        run: ls -l target/

      # 4️⃣ Deploy e build Docker na VM diretamente a partir do repositório
      - name: Build and deploy backend on VM using repo Dockerfile
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.BACKEND_VM_IP }}
          username: ${{ secrets.BACKEND_VM_USER }}
          key: ${{ secrets.BACKEND_VM_SSH_KEY }}
          port: 22
          script: |
            set -e
            # Cria pasta e copia código (opcional: você pode clonar direto do repo na VM)
            mkdir -p /home/ubuntu/backend
            rsync -av --exclude='.git' ./ /home/ubuntu/backend/
            cd /home/ubuntu/backend

            # Build Docker usando Dockerfile do repositório
            docker build -t portfolio-backend .

            # Para e remove container antigo se existir
            if docker ps -a --format '{{.Names}}' | grep -Eq '^portfolio-backend$'; then
              docker stop portfolio-backend || true
              docker rm portfolio-backend || true
            fi

            # Roda o container
            docker run -d --name portfolio-backend \
              -p 8080:8080 \
              -e SPRING_DATASOURCE_URL="${{ secrets.SPRING_DATASOURCE_URL }}" \
              -e SPRING_DATASOURCE_USERNAME="${{ secrets.SPRING_DATASOURCE_USERNAME }}" \
              -e SPRING_DATASOURCE_PASSWORD="${{ secrets.SPRING_DATASOURCE_PASSWORD }}" \
              -e SPRING_KAFKA_BOOTSTRAP_SERVERS="${{ secrets.SPRING_KAFKA_BOOTSTRAP_SERVERS }}" \
              portfolio-backend:latest
