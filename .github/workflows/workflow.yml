name: Deploy backend to VM (backend + docker)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3️⃣ Dar permissão ao Maven Wrapper
      - name: Give execute permission to Maven wrapper
        run: chmod +x ./mvnw

      # 4️⃣ Build do JAR
      - name: Build JAR
        run: ./mvnw -B clean package -DskipTests

      # 5️⃣ Copiar JAR e Dockerfile para a VM
      - name: Copy files to backend VM
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.BACKEND_VM_IP }}
          username: ${{ secrets.BACKEND_VM_USER }}
          key: ${{ secrets.BACKEND_VM_SSH_KEY }}
          port: 22
          source: |
            target/portfolio-backend-0.0.1-SNAPSHOT.jar
            Dockerfile
          target: /home/ubuntu/backend/

      # 6️⃣ Build e deploy na VM
      - name: Build and deploy backend on VM
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.BACKEND_VM_IP }}
          username: ${{ secrets.BACKEND_VM_USER }}
          key: ${{ secrets.BACKEND_VM_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd /home/ubuntu/backend

            # Renomeia o JAR copiado para app.jar (como esperado no Dockerfile)
            mv -f portfolio-backend-0.0.1-SNAPSHOT.jar app.jar

            # Atualiza pacotes e garante Docker instalado
            sudo apt-get update
            sudo apt-get install -y \
              ca-certificates curl gnupg lsb-release \
              docker-ce docker-ce-cli docker-compose-plugin

            # Garante que o Docker está ativo
            sudo systemctl enable --now docker

            # Build da imagem Docker
            sudo docker build -t portfolio-backend .

            # Para e remove container antigo se existir
            if sudo docker ps -a --format '{{.Names}}' | grep -Eq '^portfolio-backend$'; then
              sudo docker stop portfolio-backend || true
              sudo docker rm portfolio-backend || true
            fi

            # Roda o container com variáveis de ambiente
            sudo docker run -d --name portfolio-backend \
              -p 8080:8080 \
              -e SPRING_DATASOURCE_URL="${{ secrets.SPRING_DATASOURCE_URL }}" \
              -e SPRING_DATASOURCE_USERNAME="${{ secrets.SPRING_DATASOURCE_USERNAME }}" \
              -e SPRING_DATASOURCE_PASSWORD="${{ secrets.SPRING_DATASOURCE_PASSWORD }}" \
              -e SPRING_KAFKA_BOOTSTRAP_SERVERS="${{ secrets.SPRING_KAFKA_BOOTSTRAP_SERVERS }}" \
              portfolio-backend:latest
